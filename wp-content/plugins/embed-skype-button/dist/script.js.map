{"version":3,"file":"script.js","mappings":"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","sources":["webpack://skype-button-block/external var \"ReactDOM\"","webpack://skype-button-block/./src/Style.js","webpack://skype-button-block/../Components/Helper/getCSS.js","webpack://skype-button-block/./src/utils/icons.js","webpack://skype-button-block/./src/SkypeButton.js","webpack://skype-button-block/./src/utils/functions.js","webpack://skype-button-block/./src/script.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","import { getSpaceCSS } from '../../Components/Helper/getCSS';\r\n\r\nconst Style = ({ attributes, clientId }) => {\r\n\tconst { isWhite, size, alignment, padding  } = attributes;\r\n\r\n\treturn <style dangerouslySetInnerHTML={{\r\n\t\t__html: `\r\n\t\t#sbbSkypeButton-${clientId}{\r\n\t\t\ttext-align: ${alignment};\r\n\t\t}\r\n\t\t#sbbSkypeButton-${clientId} .sbbSkypeButton{\r\n\t\t\tfont-size: ${size}px;\r\n\t\t\tpadding: ${getSpaceCSS(padding)};\r\n\t\t}\r\n\t\t#sbbSkypeButton-${clientId} .sbbSkypeButton span{\r\n\t\t\tcolor: ${isWhite ? '#fff': '#00aff0'};\r\n\t\t}\r\n\t\t`.replace(/\\s+/g, ' ')\r\n\t}} />;\r\n}\r\nexport default Style;","export const getBackgroundCSS = (bg, isSolid = true, isGradient = true, isImage = true) => {\r\n\tconst { type = 'solid', color = '#000000b3', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)', image = {}, position = 'center center', attachment = 'initial', repeat = 'no-repeat', size = 'cover', overlayColor = '#000000b3' } = bg;\r\n\r\n\tconst styles = ('gradient' === type && isGradient) ? `background: ${gradient};` :\r\n\t\t('image' === type && isImage) ?\r\n\t\t\t`background: url(${image?.url});\r\n\t\t\t\tbackground-color: ${overlayColor};\r\n\t\t\t\tbackground-position: ${position};\r\n\t\t\t\tbackground-size: ${size};\r\n\t\t\t\tbackground-repeat: ${repeat};\r\n\t\t\t\tbackground-attachment: ${attachment};\r\n\t\t\t\tbackground-blend-mode: overlay;` :\r\n\t\t\tisSolid && `background: ${color};`;\r\n\r\n\treturn styles;\r\n} // PHP version in Stepped Content\r\n\r\nexport const getBorderCSS = (border) => {\r\n\tconst { width = '0px', style = 'solid', color = '#0000', side = 'all', radius = '0px' } = border;\r\n\r\n\tconst borderSideCheck = s => {\r\n\t\tconst bSide = side?.toLowerCase();\r\n\t\treturn bSide?.includes('all') || bSide?.includes(s);\r\n\t}\r\n\r\n\tconst noWidth = width === '0px' || !width;\r\n\tconst borderCSS = `${width} ${style} ${color}`;\r\n\r\n\tconst styles = `\r\n\t\t${noWidth ? '' : borderSideCheck('top') ? `border-top: ${borderCSS};` : ''}\r\n\t\t${noWidth ? '' : borderSideCheck('right') ? `border-right: ${borderCSS};` : ''}\r\n\t\t${noWidth ? '' : borderSideCheck('bottom') ? `border-bottom: ${borderCSS};` : ''}\r\n\t\t${noWidth ? '' : borderSideCheck('left') ? `border-left: ${borderCSS};` : ''}\r\n\t\t${!radius ? '' : `border-radius: ${radius};`}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getColorsCSS = (colors) => {\r\n\tconst { color = '#333', bgType = 'solid', bg = '#0000', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)' } = colors;\r\n\r\n\tconst styles = `\r\n\t\t${color ? `color: ${color};` : ''}\r\n\t\t${gradient || bg ? `background: ${'gradient' === bgType ? gradient : bg};` : ''}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getIconCSS = (icon, isSize = true, isColor = true) => {\r\n\tconst { fontSize = 16, colorType = 'solid', color = 'inherit', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)' } = icon;\r\n\r\n\tconst colorCSS = 'gradient' === colorType ?\r\n\t\t`color: transparent; background-image: ${gradient}; -webkit-background-clip: text; background-clip: text;` :\r\n\t\t`color: ${color};`;\r\n\r\n\tconst styles = `\r\n\t\t${!fontSize || !isSize ? '' : `font-size: ${fontSize}px;`}\r\n\t\t${isColor ? colorCSS : ''}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getMultiShadowCSS = (value, type = 'box') => {\r\n\tconst { shadow = [{ hOffset: '0px', vOffset: '0px', blur: '0px', spreed: '0px', color: '#7090b0', isInset: false }] } = value;\r\n\r\n\tlet styles = '';\r\n\r\n\tshadow?.map((item, index) => {\r\n\t\tconst { hOffset = '0px', vOffset = '0px', blur = '0px', spreed = '0px', color = '#7090b0', isInset = false } = item;\r\n\r\n\t\tconst inset = isInset ? 'inset' : '';\r\n\t\tconst offsetBlur = `${hOffset || ''} ${vOffset || ''} ${blur || ''}`;\r\n\t\tconst isComa = index + 1 >= shadow.length ? '' : ', ';\r\n\r\n\t\tstyles += 'text' === type ? `${offsetBlur} ${color || ''}${isComa}` : `${offsetBlur} ${spreed || ''} ${color || ''} ${inset}${isComa}`;\r\n\t});\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getSeparatorCSS = (separator) => {\r\n\tconst { width = '50%', height = '2px', style = 'solid', color = '#bbb' } = separator;\r\n\r\n\tconst styles = `\r\n\t\twidth: ${width};\r\n\t\t${'0px' === height && '0em' === height && '0rem' === height ? '' : `border-top: ${height} ${style} ${color};`}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getShadowCSS = (shadow) => {\r\n\tconst { type = 'box', hOffset = '0px', vOffset = '0px', blur = '0px', spreed = '0px', color = '#7090b0', isInset = false } = shadow;\r\n\r\n\tconst inset = isInset ? 'inset' : '';\r\n\tconst offsetBlur = `${hOffset} ${vOffset} ${blur}`;\r\n\r\n\tconst styles = 'text' === type ? `${offsetBlur} ${color}` : `${offsetBlur} ${spreed} ${color} ${inset}`;\r\n\r\n\treturn styles || 'none';\r\n}\r\n\r\nexport const getSpaceCSS = (space) => {\r\n\tconst { side = 2, vertical = '0px', horizontal = '0px', top = '0px', right = '0px', bottom = '0px', left = '0px' } = space;\r\n\r\n\tconst styles = 2 === side ? `${vertical} ${horizontal}` : `${top} ${right} ${bottom} ${left}`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getTypoCSS = (typo, isFamily = true) => {\r\n\tconst { fontFamily = 'Default', fontCategory = 'sans-serif', fontVariant = 400, fontWeight = 400, isUploadFont = true, fontSize = 15, fontStyle = 'normal', textTransform = 'none', textDecoration = 'auto', lineHeight = '135%', letterSpace = '0px' } = typo;\r\n\r\n\tconst generateCss = (value, cssProperty) => !value ? '' : `${cssProperty}: ${value};`;\r\n\r\n\tconst styles = `\r\n\t\t${(!isFamily || !fontFamily) || ('Default' === fontFamily) ? '' : `font-family: '${fontFamily}', ${fontCategory};`}\r\n\t\t${generateCss(fontWeight, 'font-weight')}\r\n\t\t${!fontSize ? '' : `font-size: ${fontSize}px;`}\r\n\t\t${generateCss(fontStyle, 'font-style')}\r\n\t\t${generateCss(textTransform, 'text-transform')}\r\n\t\t${generateCss(textDecoration, 'text-decoration')}\r\n\t\t${generateCss(lineHeight, 'line-height')}\r\n\t\t${generateCss(letterSpace, 'letter-spacing')}\r\n\t`;\r\n\r\n\t// Google font link\r\n\tconst linkQuery = !fontVariant || 400 === fontVariant ? '' : '400i' === fontVariant ? ':ital@1' : fontVariant?.includes('00i') ? `: ital, wght@1, ${fontVariant?.replace('00i', '00')} ` : `: wght@${fontVariant} `;\r\n\r\n\tconst link = 'Default' === fontFamily || !fontFamily ? '' : `https://fonts.googleapis.com/css2?family=${fontFamily?.split(' ').join('+')}${linkQuery.replace(/ /g, '')}&display=swap`;\r\n\r\n\treturn { styles: styles.replace(/\\s+/g, ' ').trim(), googleFontLink: isUploadFont ? link : '' };\r\n}","export const skypeIcon = (size, color = '#00aff0') => <svg xmlns='http://www.w3.org/2000/svg' width={size} height={size} viewBox='0 0 24 24'>\r\n\t<path fill={color} d='M12.05175,18.85575 C8.025,18.85575 6.22425,16.8765 6.22425,15.393 C6.22425,14.63175 6.786,14.0985 7.56,14.0985 C9.2835,14.0985 8.83725,16.57275 12.05175,16.57275 C13.69725,16.57275 14.60625,15.67875 14.60625,14.7645 C14.60625,14.21475 14.33475,13.605 13.251,13.338 L9.66975,12.444 C6.786,11.721 6.2625,10.16175 6.2625,8.69625 C6.2625,5.65275 9.1275,4.5105 11.8185,4.5105 C14.2965,4.5105 17.2185,5.88 17.2185,7.7055 C17.2185,8.48775 16.54125,8.943 15.76725,8.943 C14.2965,8.943 14.56725,6.9075 11.6055,6.9075 C10.1355,6.9075 9.32175,7.5735 9.32175,8.526 C9.32175,9.47625 10.48275,9.78 11.49,10.0095 L14.14125,10.59825 C17.0445,11.24475 17.78025,12.93975 17.78025,14.5365 C17.78025,17.00925 15.88275,18.85575 12.05175,18.85575 M23.15025,13.9695 C23.14275,14.0115 23.1375,14.05425 23.12925,14.09625 L23.08875,13.85475 C23.1105,13.89225 23.12925,13.93125 23.15025,13.9695 C23.274,13.29525 23.33925,12.60525 23.33925,11.91525 C23.33925,10.38525 23.03925,8.901 22.44825,7.50375 C21.87675,6.1545 21.06075,4.9425 20.019,3.9015 C18.97875,2.8605 17.766,2.04375 16.41675,1.473 C15.02025,0.882 13.536,0.58275 12.00675,0.58275 C11.28525,0.58275 10.563,0.65025 9.86025,0.78525 C9.85875,0.78525 9.85725,0.78525 9.855,0.786 C9.89475,0.807 9.9345,0.82575 9.9735,0.8475 L9.735,0.81 C9.77475,0.8025 9.81525,0.79425 9.855,0.786 C8.8905,0.27375 7.80675,0 6.70875,0 C4.917,0 3.23175,0.6975 1.965,1.965 C0.69825,3.23175 0,4.917 0,6.7095 C0,7.8495 0.29325,8.97075 0.84375,9.96225 C0.8505,9.921 0.85575,9.879 0.864,9.8385 L0.90525,10.07625 C0.8835,10.03875 0.86475,9.99975 0.84375,9.96225 C0.732,10.6035 0.67275,11.25975 0.67275,11.91525 C0.67275,13.44525 0.97275,14.9295 1.5645,16.32675 C2.1345,17.67675 2.952,18.888 3.99225,19.929 C5.03325,20.96925 6.2445,21.7875 7.59525,22.35675 C8.99175,22.94925 10.47675,23.2485 12.00675,23.2485 C12.672,23.2485 13.3395,23.18775 13.99125,23.07225 C13.953,23.05125 13.914,23.03175 13.87575,23.00925 L14.118,23.052 C14.076,23.0595 14.034,23.06475 13.99125,23.07225 C14.99475,23.64075 16.131,23.94225 17.29125,23.94225 C19.08375,23.94225 20.7675,23.2455 22.035,21.97725 C23.3025,20.71125 24,19.026 24,17.2335 C24,16.089 23.70525,14.964 23.15025,13.9695' />\r\n</svg>;\r\n\r\nexport const caretIcon = (size, color = '#00aff0') => <svg xmlns='http://www.w3.org/2000/svg' width={size} height={size} viewBox='-96 0 512 512' >\r\n\t<path fill={color} d='M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z' />\r\n</svg>","import { firstCharToUpper } from './utils/functions';\r\nimport { caretIcon, skypeIcon } from './utils/icons';\r\n\r\nconst SkypeButton = ({ attributes, clientId }) => {\r\n\tconst { skypeID, type, isWhite, size } = attributes;\r\n\r\n\twindow.addEventListener('click', (event) => {\r\n\t\tif (!event.target.matches(`#sbbSkypeButton-${clientId} .dropdown`) && !event.target.matches(`#sbbSkypeButton-${clientId} .dropdown svg`) && !event.target.matches(`#sbbSkypeButton-${clientId} .dropdown svg path`)) {\r\n\t\t\tconst dropdowns = document.querySelectorAll(`#sbbSkypeButton-${clientId} .dropdown .show`);\r\n\t\t\tdropdowns.forEach(d => {\r\n\t\t\t\tif (d.classList.contains('show')) {\r\n\t\t\t\t\td.classList.remove('show');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tconst Item = ({ type, isIcon = true }) => <a href={`skype:${skypeID}?${type}`}>\r\n\t\t{isIcon && skypeIcon(size, isWhite ? '#fff' : '#00aff0')}\r\n\t\t<span>{firstCharToUpper(type)}</span>\r\n\t</a>\r\n\r\n\treturn <div className='sbbSkypeButton'>\r\n\t\t{'dropdown' === type ?\r\n\t\t\t<span className='dropdown' onClick={() => document.getElementById(`dropdownContent-${clientId}`).classList.toggle('show')}>\r\n\t\t\t\t{skypeIcon(size, isWhite ? '#fff' : '#00aff0')}\r\n\t\t\t\t{/* <span>Call</span> */}\r\n\t\t\t\t{caretIcon(size, isWhite ? '#fff' : '#00aff0')}\r\n\r\n\t\t\t\t<ul id={`dropdownContent-${clientId}`}>\r\n\t\t\t\t\t<li><Item type='call' isIcon={false} /></li>\r\n\t\t\t\t\t<li><Item type='chat' isIcon={false} /></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</span> :\r\n\t\t\t<Item type={type} />}\r\n\t</div>\r\n}\r\nexport default SkypeButton;","export const firstCharToUpper = str => str.charAt(0).toUpperCase() + str.slice(1);","import { render } from 'react-dom';\r\n\r\nimport './style.scss';\r\nimport Style from './Style';\r\nimport SkypeButton from './SkypeButton';\r\n\r\n// Business Card\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst allSkypeButton = document.querySelectorAll('.wp-block-sbb-skype-button');\r\n\tallSkypeButton.forEach(skypeButton => {\r\n\t\tconst attributes = JSON.parse(skypeButton.dataset.attributes);\r\n\r\n\t\trender(<>\r\n\t\t\t<Style attributes={attributes} clientId={attributes.cId} />\r\n\r\n\t\t\t<SkypeButton attributes={attributes} clientId={attributes.cId} />\r\n\t\t</>, skypeButton);\r\n\r\n\t\tskypeButton?.removeAttribute('data-attributes');\r\n\t});\r\n});"],"names":["ReactDOM","space","side","vertical","horizontal","top","right","bottom","left","attributes","clientId","isWhite","size","alignment","padding","dangerouslySetInnerHTML","__html","replace","skypeIcon","color","xmlns","width","height","viewBox","fill","d","skypeID","type","window","addEventListener","event","target","matches","document","querySelectorAll","forEach","classList","contains","remove","Item","str","isIcon","href","charAt","toUpperCase","slice","className","onClick","getElementById","toggle","caretIcon","id","skypeButton","JSON","parse","dataset","render","cId","removeAttribute"],"sourceRoot":""}